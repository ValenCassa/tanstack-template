/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './app/__root'
import { Route as testTestDotpageRouteImport } from './app/test/test.page'
import { Route as indexIndexDotpageRouteImport } from './app/index/index.page'
import { Route as postPostIdPostIdDotpageRouteImport } from './app/post/$postId/$postId.page'
import { Route as postPostDotpageRouteImport } from './app/post/post.page'
import { ServerRoute as apiAuthSplatServerRouteImport } from './app/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const testTestDotpageRoute = testTestDotpageRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const indexIndexDotpageRoute = indexIndexDotpageRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const postPostIdPostIdDotpageRoute = postPostIdPostIdDotpageRouteImport.update({
  id: '/post/$postId',
  path: '/post/$postId',
  getParentRoute: () => rootRouteImport,
} as any)
const postPostDotpageRoute = postPostDotpageRouteImport.update({
  id: '/post/',
  path: '/post/',
  getParentRoute: () => rootRouteImport,
} as any)
const apiAuthSplatServerRoute = apiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof indexIndexDotpageRoute
  '/test': typeof testTestDotpageRoute
  '/post': typeof postPostDotpageRoute
  '/post/$postId': typeof postPostIdPostIdDotpageRoute
}
export interface FileRoutesByTo {
  '/': typeof indexIndexDotpageRoute
  '/test': typeof testTestDotpageRoute
  '/post': typeof postPostDotpageRoute
  '/post/$postId': typeof postPostIdPostIdDotpageRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof indexIndexDotpageRoute
  '/test': typeof testTestDotpageRoute
  '/post/': typeof postPostDotpageRoute
  '/post/$postId': typeof postPostIdPostIdDotpageRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/test' | '/post' | '/post/$postId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/test' | '/post' | '/post/$postId'
  id: '__root__' | '/' | '/test' | '/post/' | '/post/$postId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  indexIndexDotpageRoute: typeof indexIndexDotpageRoute
  testTestDotpageRoute: typeof testTestDotpageRoute
  postPostDotpageRoute: typeof postPostDotpageRoute
  postPostIdPostIdDotpageRoute: typeof postPostIdPostIdDotpageRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof apiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof apiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof apiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  apiAuthSplatServerRoute: typeof apiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof testTestDotpageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof indexIndexDotpageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/post/$postId': {
      id: '/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof postPostIdPostIdDotpageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/post/': {
      id: '/post/'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof postPostDotpageRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof apiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  indexIndexDotpageRoute: indexIndexDotpageRoute,
  testTestDotpageRoute: testTestDotpageRoute,
  postPostDotpageRoute: postPostDotpageRoute,
  postPostIdPostIdDotpageRoute: postPostIdPostIdDotpageRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  apiAuthSplatServerRoute: apiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
